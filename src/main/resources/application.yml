server:
  port: 8081

spring:
  devtools:
    livereload:
      enabled: true
      # thymeleaf cache 비활성화
  thymeleaf:
    cache : false
  mvc:
    pathmatch:
       matching-strategy: ant_path_matcher

  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
  h2:
    console:
      enabled: true
      # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
      #path: /h2-console  # H2 Console의 Path
  datasource:
    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
    url: jdbc:h2:tcp://localhost/~/test  # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)

  ## JPA Setting Info
  jpa:
    hibernate:
      ddl-auto: update  # option type: create, create-drop, update, validate, none
    properties:
      hibernate:
        diarect: org.hibernate.dialect.H2Dialect  # 쿼리의 기준이 되는 데이터베이스 엔진을 설정합니다.
        show_sql: true  # sql 쿼리를 보여줍니다.
        format_sql: true  # sql query formatting
        use_sql_comments: true  # sql 쿼리의 추가정보를 보여줍니다.

# 로그 레벨 설정
logging:
  level:
    # hibernate 가 남기는 모든 로그가 debug모드로 설정
    # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
    org.hibernate.SQL: INFO
    org.hibernate.type: INFO # 실제 들어가는 파라미터값 찍어주는 설정


